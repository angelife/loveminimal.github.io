#+DATE: <2020-11-20 Fri 14:59>
#+TITLE: Git

→ 深度学习 Git ，可以参考官网挂出的这本 [[https://git-scm.com/book/zh/v2][《Pro Git》]] 。

** 序言

*Git 是一个神奇的工具，对，神奇的！！！*

#+BEGIN_EXPORT html
<img
src="images/git-1.png"
width=""
height=""
style=""
title=""
/>
#+END_EXPORT

#+BEGIN_EXPORT html
<essay>
至于 Git 的基本原理，可以参考上面那本 《Pro Git》，这里我们只列出安装、及基本和初步进阶的一些操作。
</essay>
#+END_EXPORT

** 命令备忘录

#+BEGIN_EXPORT html
<essay>
要完整地精通 Git ，注定旷日持久。实际上，我们在日常工作中并不需要这么多，这个板块我们用来列出常用的一些命令。
</essay>
#+END_EXPORT

*** 配置

Git 自带一个 =git config= 的工具来帮助设置控制 Git 外观和行为的配置变量。

#+BEGIN_SRC sh -n
  # ~/.gitconfig 或 ~/.config/git/config
  # 只针对当前用户
  $ git config --global user.name "John Doe"
  $ git config --global user.email johndoe@example.com

  # 其他如 --local 针对当前仓库 --system 针对系统通用配置
#+END_SRC

如果想要检查你的配置，可以使用 =git config --list= 命令来列出所有 Git 当时能找到的配置。

**ssh-keygen*

#+BEGIN_SRC sh -n
$ ssh-keygen -t rsa -C "loveminimal@163.com"
$ cd ~/.ssh
#+END_SRC

*** 获取帮助

若你使用 Git 时需要获取帮助，有三种等价的方法可以找到 Git 命令的综合手册（manpage）：

#+BEGIN_SRC sh -n
$ git help <verb>
$ git <verb> --help
$ man git-<verb>
#+END_SRC

*** 获取 Git 仓库

通常有两种获取 Git 项目仓库的方式：
- 将尚未进行版本控制的本地目录转换为 Git 仓库（ =git init= ）；
- 从其它服务器克隆一个已存在的 Git 仓库（ =git clone= ）。

*** 远程仓库

 远程仓库是指托管在因特网或其他网络中的你的项目的版本库。

#+BEGIN_EXPORT html
<note>
词语“远程”未必表示仓库在网络或互联网上的其它位置，而只是表示它在别处。
</note>
#+END_EXPORT

**** 查看远程仓库

#+BEGIN_SRC sh -n
$ git remote -v
origin	https://github.com/schacon/ticgit (fetch)
origin	https://github.com/schacon/ticgit (push)
#+END_SRC

**** 添加远程仓库

运行 =git remote add <shortname> <url>= 添加一个新的远程 Git 仓库，同时指定一个方便使用的简写：

#+BEGIN_SRC sh -n
$ git remote
origin
$ git remote add pb https://github.com/paulboone/ticgit
$ git remote -v
origin	https://github.com/schacon/ticgit (fetch)
origin	https://github.com/schacon/ticgit (push)
pb	https://github.com/paulboone/ticgit (fetch)
pb	https://github.com/paulboone/ticgit (push)
#+END_SRC

现在你可以在命令行中使用字符串 =pb= 来代替整个 URL。 例如，如果你想拉取 Paul 的仓库中有但你没有的信息，可以运行 =git fetch pb= 。

**** 从远程仓库中抓取与拉取

#+BEGIN_SRC sh -n
$ git fetch <remote>
#+END_SRC

必须注意 =git fetch= 命令只会将数据下载到你的本地仓库——它并不会自动合并或修改你当前的工作。

**** 查看某个远程仓库

如果想要查看某一个远程仓库的更多信息，可以使用 =git remote show <remote>= 命令。

#+BEGIN_SRC sh -n
$ git remote show origin
\* remote origin
  Fetch URL: https://github.com/schacon/ticgit
  Push  URL: https://github.com/schacon/ticgit
  HEAD branch: master
  Remote branches:
    master                               tracked
    dev-branch                           tracked
  Local branch configured for 'git pull':
    master merges with remote master
  Local ref configured for 'git push':
    master pushes to master (up to date)
#+END_SRC

**** 远程仓库的重命名与移除

你可以运行 =git remote rename= 来修改一个远程仓库的简写名。

#+BEGIN_SRC sh -n
$ git remote rename pb paul
$ git remote
origin
paul
#+END_SRC

可以使用 =git remote remove= 或 =git remote rm= 除一个远程仓库。

#+BEGIN_SRC sh -n
$ git remote remove paul
$ git remote
origin
#+END_SRC

*** 标签 Tag

**** 列出标签

在 Git 中列出已有的标签非常简单，只需要输入 =git tag= ，按照通配符列出标签需要 =-l= 或 =--list= 选项。

#+BEGIN_SRC sh -n
$ git tag
v1.0
v2.0

$ git tag -l "v1.8.5*"
v1.8.5
v1.8.5-rc0
v1.8.5-rc1
v1.8.5-rc2
...
#+END_SRC

**** 创建标签

** WIKI

*** 推送指定分支到远程分支上

如果你本地的分支名称和远程名称相同，则使用以下命令：

#+BEGIN_SRC sh -n
  $ git push origin branchName
#+END_SRC

如果本地的分支跟远程的分支不一样，则指定本地和远程的分支的名称：

#+BEGIN_SRC sh -n
  $ git push origin localBranchName:remoteBranchName
#+END_SRC
