#+DATE: <2020-11-20 Fri 14:59>
#+TITLE: Git

→ 深度学习 Git ，可以参考官网挂出的这本 [[https://git-scm.com/book/zh/v2][《Pro Git》]] 。

** 序言

*Git 是一个神奇的工具，对，神奇的！！！*

#+BEGIN_EXPORT html
<img
src="images/git-1.png"
width=""
height=""
style=""
title=""
/>
#+END_EXPORT

#+BEGIN_EXPORT html
<essay>
至于 Git 的基本原理，可以参考上面那本 《Pro Git》，这里我们只列出安装、及基本和初步进阶的一些操作。
</essay>
#+END_EXPORT

** 设置与配置

有两个十分常用的命令： =config= 和 =help= 。

在开始使用 Git 之前，我们用它来指定我们的名字，邮箱地址和编辑器偏好，如下：

#+BEGIN_SRC sh -n
$ git config --global user.name "John Doe"
$ git config --global user.email johndoe@example.com
#+END_SRC

** 获取与创建项目

有几种方式获取一个 Git 仓库。 一种是从网络上或者其他地方拷贝一个现有的仓库（ =git clone= ），另一种就是在一个目录中创建一个新的仓库（ =git init= ）。

=git clone= 实际上是一个封装了其他几个命令的命令。过程如下：
1. 它创建了一个新目录，切换到新的目录，
2. 然后 =git init= 来初始化一个空的 Git 仓库，
3. 然后为你指定的 URL 添加一个（默认名称为 =origin= 的）远程仓库（ =git remote add= ），
4. 再针对远程仓库执行 =git fetch= ，
5. 最后通过 =git checkout= 将远程仓库的最新提交检出到本地的工作目录。

** 快照基础

……

我们只看一些很有趣，但以前没有注意的命令。

_1. 交互式暂存_

运行 =git add [-i|--inteactive]= ，Git 将会进入一个交互式终端模式，显示类似下面的东西：

#+BEGIN_SRC sh -n
$ git add -i
           staged     unstaged path
  1:    unchanged        +0/-1 TODO
  2:    unchanged        +1/-1 index.html
  3:    unchanged        +5/-1 lib/simplegit.rb

\*** Commands ***
  1: [s]tatus     2: [u]pdate      3: [r]evert     4: [a]dd untracked
  5: [p]atch      6: [d]iff        7: [q]uit       8: [h]elp
What now>
#+END_SRC

它将暂存的修改列在左侧，未暂存的修改列在右侧。

_2. 检查文件状态_

使用 =git status [-s|--short]= 用来输出简洁的文件描述形式。

_3. git difftool_

=git difftool= 可以用来简单地启动一个外部工具来为你展示两棵树之间的差异。

_4. git commit_

=git commit= 命令将所有通过 =git add= 暂存的文件内容在数据库中创建一个持久的快照， *然后将当前分支上的分支指针移到其之上* 。

可以通过使用 =-a= 标志来跳过 =git add= 这一步，及如何使用 =-m= 标志通过命令行而不启动一个编辑器来传递提交信息。

有时候我们提交完了才发现漏掉了几个文件没有添加，或者提交信息写错了。 此时，可以运行 =git commit --amend= 选项的提交命令来重新提交。

这个命令会将暂存区中的文件提交。 如果自上次提交以来你还未做任何修改（例如，在上次提交后马上执行了此命令）， 那么快照会保持不变，而你所修改的只是提交信息。

** FAQ

*** 推送指定分支到远程分支上

如果你本地的分支名称和远程名称相同，则使用以下命令：

#+BEGIN_SRC sh -n
  git push origin branchName
#+END_SRC

如果本地的分支跟远程的分支不一样，则指定本地和远程的分支的名称：

#+BEGIN_SRC sh -n
  git push origin localBranchName:remoteBranchName
#+END_SRC
