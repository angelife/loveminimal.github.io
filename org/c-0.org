#+DATE: <2020-12-06 Sun 18:01>
#+TITLE: C 语言序言

** 中文版序

C 程序设计语言最早是由 Dennis Ritchie 于 1973 年设计并实现的。从那时开始，C 语言从其位于贝尔实验室的发源地传播到世界各地。它已经成为全球程序员的公共语言，并由此诞生了两个新的主流语言 C++ 与 Java -- 它们都建立在 C 语言的语法和基本结构的基础上。现在世界上的许多软件都是在 C 语言及其衍生的各种语言的基础上开发出来的。

C 语言的传播需要我们对语言加以完整的描述，并适应它在使用过程中所进行的一些变化。1988 年，美国国家标准协会（ANSI）为 C 语言制定了一个精确的标准，该标准保持了 C 的表达式能力、效率、小规模以及对机器的最终控制，同时还保证符合标准的程序可以从一种计算机与操作系统移植到另一种计算机与操作系统而无须改变。这个标准同时也被国际标准化组织（ISO）接受为国际标准，使世界各地的用户都受益。

标准委员会考虑到 C 语言在多民族使用的情况，在语言本身以及库中都是提供了对“宽字符”的支持，这是以中文以及其他不使用罗马字符集的语言来表示文本所需要的。

除了这些渐进的变化外，C 仍保持着它原来的样子 -- 适用于各种背景的程序员的一种紧凑而有效的工具。

** 第 2 版前言

自从 1978 年本书第 1 版出版以来，计算机领域经历了一场革命。大型计算机的功能越来越强大，而个人计算机的性能也可以与十多年前的大型机相媲美。在此期间，C 语言也在悄悄地演进，其发展早已超出了它仅仅作为 UNIX 操作系统的编程语言的初衷。

C 语言普及程度的逐渐增加以及该语言本身的发展，加之很多组织开发出了与其设计有所不同的编译器，所有这一切都要求对 C 语言有一个比本书第 1 版更精确、更适应其发展的定义。1983 年，美国车家标准协会（ANSI）成立了一个委员会，其目标是制定“一个无歧义性的且与具体机器无关的 C 语言定义”，而同时又要保持 C 语言原有的“精神”。结果产生了 C 语言的 ANSI 标准。

ANSI 标准规范了一些在本书第 1 版中提及但没有具体描述的结构，特别是结构赋值和枚举。该标准还提供了一种新的函数声明形式，允许在使用过程中对函数的定义进行交叉检查。标准中还详细说明了一个具有标准输入/输出、内存管理和字符串操作等扩展函数集的标准库。它精确地说明了在 C 语言原始定义中并不明晰的某些特性的行为，同时还明确了 C 语言中与具体机器相关的一些特性。

我们将尽力保持本书第 1 版的简洁性。C 语言并不是一种大型语言，也不需要用一本很厚的书来描述。我们在讲解一些关键特性（比如指针）时做了改进，它是 C 语言程序设计的核心。我们重新对以前的例子进行了精练
